component based architecture
to comunication between components we have 3 ways
1) props

    parent to child component communication

what is props?
1) props is a object
2) props is a read only object
3) props is a uni-directional flow
4) props is a way to pass data from parent to child component


limitations of props
a-->b-->c*

props drilling

---------------------------


virtual dom:
dom:document object model

original > copy > light weight copy > virtual dom

if any changes in virtual dom then only it will update in original dom

hook: any builtin or lifecycle method in functional component
useState:

2) context
      parent to child and most child... global state management
3) redux
redux is state management library use to transfer data from one component to another component


redux toolkit
npm install @reduxjs/toolkit
npm install react-redux



tradinational redux approch

action 
reducer
container

redux: action : will have 2 params
state, action

https://chromewebstore.google.com/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd?hl=en

switch case:

reducer: function(state, action){
    switch(action.type){
        case "ADD":
            return state+action.payload
        case "SUB":
            return state-action.payload
        default:
            return state
    }
}










component --> comp --> urls
react-router-dom
<BrowseRouter>
<Routes>
        <Route></Route>
</Routes>
</BrowseRouter> ---> enable routes in your react application



handleSubmmit = (cb)=>{

    //register.. input... states... name email age...
    obj = {

        name:this.state.name,
        email:this.state.email,
        age:this.state.age
    }

    cb(obj)


}

{
    required:{
        value:true,message:"Name is required*"
        }
}

{
            required:{
                value:true,
                message:"Age is required*"
            }
        }


api -- create ---> react 

js --> fetch function --> ajax call
-->axios package

GET : fetch
POST : create
PUT  : update
DELETE : delete
PATCH: partial update

https://uiverse.io/loaders

npm i react-toastify

useEffect : hook: lifecycle method in functional component
to handle side effects in functional component
side effects : api calls, event listeners, timers, subscriptions



